.top-banner {
    background: var(--dark-green-blue);
    text-align: center;
    color: #fff;
    padding: 21px var(--x-spacing);
}

.header-main {
    background: #fff;
    --header-main-y-spacing: 35px;
    padding: var(--header-main-y-spacing) var(--x-spacing) 100px;
}

.header-container {
    max-width: 1234px; /* ... I declare a thumb war. */
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
}

.logo-link {
    display: flex;
    align-items: center;
    color: var(--body-black);
    --logo-circle-size: 156px;
    font-size: var(--logo-circle-size);
    &:hover {
        & .logo-icon {
            transform: scale(1.1);
        }
        & .logo-headings {
            transform: translateX(em(16px, 156px));
        }
    }
}

.logo-icon {
    --logo-circle-em-size: 1em;
    width: var(--logo-circle-em-size);
    height: var(--logo-circle-em-size);
    background: var(--tan-yellow);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform var(--trans);
}

.logo-img {
    /* The postcss-em plugin doesn't support using variables for the base value, so that's unfortunate. */
    max-width: em(95px, 156px);
    margin-right: em(5px, 156px);
}

.logo-headings {
    margin-left: em(-27px, 156px);
    transition: transform var(--trans);
}

.logo-heading {
    margin-bottom: 5px;
}

.logo-sub-heading {
    margin-left: 2px;
}

.header-search {
    margin-top: 41px;
    display: flex;
}

.search-box {
    display: block;
    border: 2px solid var(--magenta-purple);
    border-right: 0;
    line-height: 23px;
    font-weight: 600;
    font-family: var(--body-font);
    font-size: 14px;
    padding: 13.5px 18px;
    width: 274px;
    transition: border var(--trans);
    &:focus {
        outline: 0;
    }
}

.header-search:hover .search-box,
.search-box:focus {
    border-color: var(--tan-yellow);
}

.header-search:hover .search-button,
.search-box:focus + .search-button {
    background: var(--tan-yellow);
}

.search-box,
.search-box::placeholder {
    color: var(--body-black);
}

.search-button {
    display: block;
    border: 0;
    background: var(--magenta-purple);
    cursor: pointer;
    padding: 0 23px;
    transition: background var(--trans);
}

.search-icon {
    width: 25px;
}

.header-links {
    --header-links-height: 25px;
    & > ul {
        display: flex;
        list-style-type: none;
        align-items: center;
        padding: 0;
        justify-content: flex-end;
        margin: 21px 0 0;
        & > li {
            & > a {
                display: flex;
                color: var(--body-black);
                align-items: center;
                height: var(--header-links-height);
                line-height: var(--header-links-height);
                padding: 0 24px;
                transition: color var(--trans);
                &:hover {
                    color: var(--magenta-purple);
                }
                & > span {
                    display: block;
                }
            }
            &.header-links-sep {
                font-size: 0;
                height: 17px;
                width: 2px;
                background: var(--body-black);
                border-radius: 2px;
            }
        }
    }
    &.nav-header-links {
        & > ul {
            margin-top: 0;
        }
    }
}

.cart-icon {
    height: var(--header-links-height);
    margin-right: 9px;
}

#shopify-section-header {
    display: inline;
}

.menu {
    display: none;
}

#nav {
    position: sticky;
    /* This is a trick to add a class using an intersection observer, see src/js/nav.js */
    top: -1px;
    z-index: 9;
    --nav-top-height: 98px;
    margin-top: -55px;
    &.active {
        /* Compensate for the trick */
        padding-top: 1px;
        & .nav-top {
            opacity: 1;
            visibility: visible;
            pointer-events: initial;
        }
        & .nav-bottom {
            max-width: 100%;
        }
        &:hover {
            padding-top: 0;
            & .nav-top {
                transform: translateY(0);
            }
            & .nav-bottom {
                transform: translateY(var(--nav-top-height));
            }
        }
    }
}

.nav-top {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 51px;
    height: var(--nav-top-height);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    transform: translateY(-100%);
    transition: transform var(--trans), opacity var(--trans), visibility var(--trans);
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    background: #fff;
}

.nav-logo {
    & .logo-link {
        --logo-circle-size: 82px;
    }
    & .logo-headings {
        margin-left: -12px;
    }
}

.nav-bottom {
    background: var(--magenta-purple);
    max-width: 954px;
    margin: 0 auto;
    transition: max-width var(--trans), transform var(--trans);
    position: relative;
    & > ul {
        list-style-type: none;
        display: flex;
        margin: 0;
        padding: 0;
        justify-content: center;
        align-items: center;
        & > li {
            & > a {
                display: block;
                color: #fff;
                padding: 0 20px;
                position: relative;
                --nav-height: 86px;
                height: var(--nav-height);
                line-height: var(--nav-height);
                /* Required for circle animation to appear below text. */
                transform: translateZ(0);
                transition: color var(--trans);
                &:before {
                    content: '';
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%,-50%) scale(0);
                    background: var(--tan-yellow);
                    border-radius: 50%;
                    width: var(--nav-height);
                    height: var(--nav-height);
                    transition: transform var(--trans);
                    z-index: -1;
                }
            }
            &:hover {
                & > a {
                    color: var(--magenta-purple);
                    &:before {
                        transform: translate(-50%,-50%) scale(1);
                    }
                }
                & > .mega-menu {
                    opacity: 1;
                    visibility: visible;
                    pointer-events: initial;
                }
            }
        }
    }
}

.mega-menu {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: var(--magenta-purple-trans);
    list-style-type: none;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 1rem;
    padding: 31px 125px 52px;
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity var(--trans), visibility var(--trans);
    & > li {
        & > a {
            display: block;
            color: #fff;
            transition: color var(--trans), padding-left var(--trans);
            &:hover {
                color: var(--tan-yellow);
                padding-left: 1rem;
            }
        }
    }
}

@media (--lg) {
    .header-main {
        padding-bottom: calc(var(--header-main-y-spacing) + 55px);
    }
    .logo-link {
        --logo-circle-size: 125px;
    }
    .logo-heading {
        margin-bottom: -.25rem;
    }
    .header-right {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    .header-search {
        margin-top: 0;
        margin-top: 0;
    }
    .search-box {
        width: 231px;
    }
}

@media (--md) {
    .logo-headings {
        display: none;
    }
}